#include <bits/stdc++.h>
using namespace std;


 // } Driver Code Ends



class Solution
{
    public:
    void findMax(
    string str, int k,
    string& max, int ctr)
{
    if(k==0)
    return;
    
    int n=str.size();
    
    char maxm=str[ctr];
    
    for(int i=ctr+1;i<n;i++)
    {
        if(maxm<str[i])
        {
            maxm=str[i];
        }
    }
    
    if(maxm!=str[ctr])
    {
       k--; 
    }
    
    for(int i=ctr;i<n;i++)
    {
        if(str[i]==maxm)
        {
            swap(str[i],str[ctr]);
            if(str.compare(max)>0)
            {
                max=str;
            }
            findMax(str,k,max,ctr+1);
            swap(str[i],str[ctr]);
        }
    }
}

    //Function to find the largest number after k swaps.
    string findMaximumNum(string str, int k)
    {
       // code here.
       string max = str;
      findMax(str, k, max, 0);
      return max;
    }
};

// { Driver Code Starts.

int main()
{
    int t, k;
    string str;

    cin >> t;
    while (t--)
    {
        cin >> k >> str;
        Solution ob;
        cout<< ob.findMaximumNum(str, k) << endl;
    }
    return 0;
}
  // } Driver Code Ends
